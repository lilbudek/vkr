\section{Методы цифровой генерации сигнала}

	После рассмотрения видов генераторов сигналов можно сделать вывод о том, что способы получения сигнала также делятся на аналоговые и цифровые. Однако, в настоящее время аналоговые генераторы неактуальны и изучать способы генерации и схемы на аналоговой элементной базе большого смысла не имеет. Следует провести исследование цифровых методов генерации сигнала. 
\subsection*{Метод аппроксимации}	
	Метод аппроксимации подразумевает собой вычисление отсчётов функции по заданным параметрам. <<В памяти устройства хранятся лишь параметры генерируемого сигнала. Программа вычисляет отсчеты функции с некоторым заданным интервалом.>>~\cite{leso}. Исходя из этого, данный метод позволяет затратить небольшой объём памяти, но его недостаток это затраты на вычисления, что ограничивает максимальную частоту сигнала. 
\subsection*{CORDIC}
	Следующий метод тоже предполагает вычисление отсчётов. Для генерации сигналов также применяется итерационный метод CORDIC. <<CORDIC --- это аббревиатура от Coordinate Rotation Digital Computer: цифровое вычисление поворота системы координат. Алгоритм "цифра за цифрой" был разработан для аппаратного поворота вектора на плоскости с помощью простых операций "сдвиг регистра вправо" и сложение/вычитание регистров.>>~\cite{cordic}. Смысл итерационного метода заключается в том, чтобы построить следующую последовательность: $y_{i+1}=f(y_{i})$, сходящейся к функции $y(x)$. Математической моделью в данном методе является единичная окружность с парой векторов, исходящих из центра.
	
	\begin{figure}[H]
    \centering
    \includegraphics[width=0.4\textwidth]{../image/cordic.png}
    \caption{Математическая модель CORDIC.}
	\end{figure}

	Вектор $V_{x}$ отклонён от горизонтальной оси на угол являющимся аргументов функции. Второй вектор $V_{0}$ будет производить вращение от начальной точки относительно начала координат. Координаты векторов имеют значения $sin$ и $cos$ угла, на который вектор отклоняется от горизонтальной оси. 

	Для вектора $V_{0}$: $cos\;0 = 1$, $sin\;0 = 0$. 

	Для вектора $V_{x}$: $cos\;\phi = x$, $sin\;\phi = y$.

	Необходимо найти координаты вектора $V_{x}$ $x$ и $y$ после поворота на угол $\phi$. Координаты вычисляются по тригонометрическим формулам:

	$x=x_{0}*cos\;\phi-y_{0}*sin\;\phi$,

	$y=x_{0}*sin\;\phi+y_{0}*cos\;\phi$

	Так как $tan\;\phi=\dfrac{sin\;\phi}{cos\;\phi}$, то можно выразить $sin\;\phi=tan\;\phi*cos\;\phi$ и выполнить преобразование формул. Тогда получим:

	$x=cos\;\phi(x_{0}-y_{0}*tan\;\phi)$,

	$y=cos\;\phi(y_{0}+x_{0}*tan\;\phi)$

	\begin{figure}[H]
    \centering
    \includegraphics[width=0.4\textwidth]{../image/cordic2.png}
    \caption{Поворот вектора.}
	\end{figure}

	Если задавать такой угол поворота, что $tan\;\phi = \pm 2^{-i}$, где $i$ --- целое число, то умножение $x_{0}$ и $y_{0}$ сведётся к простому сдвигу их значений вправо на $i$ разрядов, так как деление на 2 представляет из себя побитовый сдвиг числа право.

	Произвольный угол можно представить в виде суммы углов:

	$\phi_{i}=\pm atan2^{-i}$, где $i = 0, 1, 2,$ и т.д.

	Тогда операция поворота вектора будет состоять из последовательных простых поворотов. В каждой итерации проводятся следующие вычисления:

	$\sigma_{i} 	= sign(z_{i})$ --- направление поворота,

	$x_{i+1} = x_{i} - \sigma_{i}*y_{i}*2^{-i}$ --- значение координаты $x$,

	$y_{i+1} = y_{i} + \sigma_{i}*x_{i}*2^{-i}$ --- значение координаты $y$,

	$z_{i+1} = z_{i} - \sigma_{i}*atan(z^{-i})$ --- отклонение вектора.

	Данный алгоритм применим для генерации синуса и его применение целесообразно только при необходимости быстродействия и высокой точности системы.
	
\subsection*{Табличный метод}		
	В табличном методе генерации сигналов предполагается, что заранее вычисленные отсчёты хранятся в памяти. То есть никаких вычислений не требуется и генерация сводится к тому, что в порт цифро-аналогового преобразователя нужно вывести ячейку по заданному адресу. <<Достоинством этого метода является меньшее время, затрачиваемое на формирование отсчета и, как следствие, возможность генерации сигналов с более высокой частотой. Недостатком является необходимость иметь большой объем памяти данных.>>~\cite{leso}. 
	
	Частота сигнала будет зависеть от опорной частоты устройства.

	$f_{out}=\dfrac{f_{clk}}{n}$, где n --- количество отсчётов (длина таблицы).	
	
	\begin{figure}[H]
	\centering
    \includegraphics[width=1\textwidth]{../image/table_func.pdf}
    \caption{Функциональная схема табличного метода.}
	\end{figure}
	
	Управлять частотой устройства не всегда удобно. При желании уменьшить частоту сигнала придётся добавлять какую-то задержку в цикл, а что делать, если появилась необходимость увеличить частоту и код уже максимально оптимизирован. К примеру максимальная частота, которой удалось достигнуть 10 кГц и на большее наше устройство уже не способно. Так как увеличить частоту опроса таблицы уже невозможно, то нужно уменьшить её длину. То есть чтобы нам получить на выходе 20 кГц мы должны будем выводить каждый второй отсчёт таблицы, если 30 кГц, то каждый третий и т. д. Это хороший вариант, но тогда возникает проблема как дополнить программу, чтобы она пропускала нужное количество отсчётов.



\subsection*{Метод DDS}	

	К табличным методам относится также метод прямого цифрового синтеза или как его ещё называют метод DDS и он решает проблему, в которую упирается обычный табличный метод. <<Прямой цифровой синтез (от англ. DDS – Direct Digital Synthesizer) – метод, позволяющий получить аналоговый сигнал (обычно это синусоидальный сигнал, пилообразный, последовательность треугольных импульсов) за счет генерации временной последовательности цифровых отсчетов и их дальнейшего преобразования в аналоговую форму посредством ЦАП.>>~\cite{leso}. На рисунке 1.11 изображена функциональная схема DDS с аккумулятором фазы.
	
	Частота сигнала в этой архитектуре определяется следующей формулой:
	
	$f_{out}=\dfrac{D * f_{clk}}{2^{A}}$, где $f_{out}$ --- выходная частота, $f_{clk}$ --- частота устройства, $D$ --- код частоты, $A$ --- разрядность аккумулятора фазы.
	
	Благодаря разрядности аккумулятора фазы можно определять насколько точно будет регулироваться частота выходного сигнала.
	
	\begin{figure}[H]
    \centering
    \includegraphics[width=1\textwidth]{../image/dds_func.pdf}
    \caption{Функциональная схема DDS с аккумулятором фазы.}
	\end{figure}
	
	В аккумуляторе фазы и есть ключевое отличие метода DDS от простого табличного синтеза. Аккумулятор фазы представляет из себя регистр, в котором в каждом такте работы устройства происходит перезагрузка величины и прибавляется заданный код частоты. Приращение зависит как раз-таки от кода частоты и регулирует это значение. Таким образом, происходит вычисление какой отсчёт нужно отправить в порт цифро-аналогового преобразователя. Ещё одним отличием от табличного способа генерации является работа на фиксированной частоте. Алгоритм метода DDS можно описать блок-схемой на рисунке 1.12.
	
	\begin{figure}[H]
    \centering
    \includegraphics[width=0.4\textwidth]{../image/dds_block.pdf}
    \caption{Алгоритм метода DDS.}
	\end{figure}
	
	С помощью данного метода можно производить синтез не только стандартных форм сигналов, но и создавать произвольные формы. Метод DDS позволяет управлять цифровым способом амплитудой и фазой сигнала, а также лежит во основе многих приборов. <<Эти приборы находят широкое применение в различных устройствах: тестовом, измерительном, коммуникационном оборудовании. Интегральные DDS --- это компактные, потребляющие минимум электроэнергии, недорогие устройства и, кроме того, очень простые с точки зрения применения.>>~\cite{dds}. 